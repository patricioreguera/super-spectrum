---
import { db, User, eq } from "astro:db";
import Layout from "../layouts/Layout.astro";
import ButtonDelete from "../components/ButtonDelete";

if (Astro.request.method === "POST") {
	// parse form data
	const formData = await Astro.request.formData();
	const email = formData.get("email");
	const username = formData.get("username");
	if (typeof email === "string" && typeof username === "string") {
		// insert form data into the Comment table
		await db.insert(User).values({ email, username });
	}
}
// render the new list of comments on each request
const users = await db.select().from(User);
---

<Layout title="Update content">
	<h1>Home</h1>
	<div>
		<form class="max-w-sm mx-auto" method="POST">
			<div class="mb-5">
				<label
					class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
				>
					username
				</label>
				<input
					type="text"
					id="username"
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:shadow-sm-light"
					placeholder="username"
					name="username"
				/>
			</div>
			<div class="mb-5">
				<label
					class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
				>
					email
				</label>
				<input
					type="text"
					id="email"
					placeholder="email"
					class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:shadow-sm-light"
					name="email"
				/>
			</div>

			<button
				type="submit"
				class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
			>
				Register new account
			</button>

			<button
				class="ml-5 text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800"
			>
				Delete formss
			</button>
		</form>
	</div>

	<div class="text-white flex flex-col justify-center items-center gap-10 mt-5">
		<h1>BASES DE DATOS</h1>

		<div class="shadow-md rounded-lg w-[1000px]">
			<table
				class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"
			>
				<thead
					class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"
				>
					<tr>
						<th scope="col" class="px-6 py-3"> UserName </th>
						<th scope="col" class="px-6 py-3"> Email </th>
						<th scope="col" class="px-6 py-3"> Action </th>
					</tr>
				</thead>
				<tbody>
					{
						users &&
							users.reverse().map((user) => (
								<tr class="odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700">
									<th
										scope="row"
										class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white"
									>
										{user.username}
									</th>
									<td class="px-6 py-4"> {user.email} </td>
									<td class="px-6 py-4">
										<form method="DELETE">
											<ButtonDelete client:load email={user.email} />
										</form>
									</td>
								</tr>
							))
					}
				</tbody>
			</table>
		</div>
	</div>
</Layout>
